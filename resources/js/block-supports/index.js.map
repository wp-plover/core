{"version":3,"file":"block-supports/index.js","mappings":"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","sources":["webpack://plover-core/external window \"React\"","webpack://plover-core/external window [\"plover\",\"utils\"]","webpack://plover-core/external window [\"wp\",\"compose\"]","webpack://plover-core/external window [\"wp\",\"element\"]","webpack://plover-core/external window [\"wp\",\"hooks\"]","webpack://plover-core/webpack/bootstrap","webpack://plover-core/webpack/runtime/compat get default export","webpack://plover-core/webpack/runtime/define property getters","webpack://plover-core/webpack/runtime/hasOwnProperty shorthand","webpack://plover-core/webpack/runtime/make namespace object","webpack://plover-core/./static/scripts/block-supports/index.jsx"],"sourcesContent":["module.exports = window[\"React\"];","module.exports = window[\"plover\"][\"utils\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { useEffect } from '@wordpress/element';\n\n/**\n * Block supports extension\n */\nimport { blockSupports, formatCustomProperty, deepMerge } from '@plover/utils';\n\naddFilter(\n  'blocks.registerBlockType',\n  'plover/block-supports',\n  (settings, name) => {\n    if (Object.keys(blockSupports).includes(name)) {\n      settings.supports = deepMerge(settings.supports, blockSupports[name]);\n    }\n\n    return settings;\n  },\n  0\n);\n\naddFilter(\n  'editor.BlockListBlock',\n  'plover/with-block-gap-css',\n  createHigherOrderComponent(\n    (BlockListBlock) => {\n      return (props) => {\n        const { name } = props;\n\n        const blocksWithBlockGap = [\n          'plover-docs/doc-list',\n          'core/page-list',\n          'core/list',\n          'core/button',\n          'core/post-author',\n        ];\n\n        const defaultReturn = <BlockListBlock {...props} />;\n\n        if (!blocksWithBlockGap.includes(name)) {\n          return defaultReturn;\n        }\n\n        const blockGap = props?.attributes?.style?.spacing?.blockGap ?? '';\n\n        if (!blockGap) {\n          return defaultReturn;\n        }\n\n        props = {\n          ...props,\n          style: {\n            ...props.style ?? {},\n            '--plover--style--block-gap': formatCustomProperty(blockGap),\n          },\n        };\n\n        const wrapperProps = {\n          ...props.wrapperProps,\n          style: {\n            ...props.wrapperProps?.style,\n            '--plover--style--block-gap': formatCustomProperty(blockGap),\n          },\n        };\n\n        return <BlockListBlock {...props} wrapperProps={wrapperProps}/>;\n      };\n    },\n    'withBlockGapCss'\n  )\n);\n\naddFilter(\n  'blocks.registerBlockType',\n  'plover/unique-block-id',\n  (settings, name) => {\n    settings.attributes = {\n      ...settings.attributes,\n      ploverBlockID: {\n        type: 'string',\n      }\n    };\n\n    return settings;\n  }\n);\n\naddFilter(\n  'editor.BlockListBlock',\n  'plover/with-unique-block-id',\n  createHigherOrderComponent(\n    (BlockListBlock) => {\n      return (props) => {\n        const { name, clientId, attributes, setAttributes } = props;\n\n        useEffect(() => {\n          if (!attributes.ploverBlockID) {\n            setAttributes({\n              ploverBlockID: clientId,\n            });\n          } else if (clientId !== attributes.ploverBlockID) {\n            if (document.querySelectorAll('#block-' + clientId).length > 1) {\n              setAttributes({\n                ploverBlockID: clientId\n              });\n            }\n          }\n\n        }, [clientId, name, attributes]);\n\n        return <BlockListBlock {...props} />;\n      };\n    },\n    'withBlockID'\n  )\n);\n"],"names":["addFilter","createHigherOrderComponent","useEffect","blockSupports","formatCustomProperty","deepMerge","settings","name","Object","keys","includes","supports","BlockListBlock","props","_props$attributes$sty","_props$style","blocksWithBlockGap","defaultReturn","createElement","blockGap","attributes","style","spacing","wrapperProps","ploverBlockID","type","clientId","setAttributes","document","querySelectorAll","length"],"sourceRoot":""}