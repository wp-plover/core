{"version":3,"file":"block-extensions/highlight/index.js","mappings":"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","sources":["webpack://plover-core/./static/scripts/block-extensions/highlight/HighlightControls.jsx","webpack://plover-core/./static/scripts/block-extensions/highlight/HighlightEdit.jsx","webpack://plover-core/./static/scripts/block-extensions/highlight/HighlightPreview.jsx","webpack://plover-core/external window \"React\"","webpack://plover-core/external window [\"plover\",\"components\"]","webpack://plover-core/external window [\"plover\",\"utils\"]","webpack://plover-core/external window [\"wp\",\"blockEditor\"]","webpack://plover-core/external window [\"wp\",\"components\"]","webpack://plover-core/external window [\"wp\",\"element\"]","webpack://plover-core/external window [\"wp\",\"hooks\"]","webpack://plover-core/external window [\"wp\",\"i18n\"]","webpack://plover-core/external window [\"wp\",\"richText\"]","webpack://plover-core/webpack/bootstrap","webpack://plover-core/webpack/runtime/compat get default export","webpack://plover-core/webpack/runtime/define property getters","webpack://plover-core/webpack/runtime/hasOwnProperty shorthand","webpack://plover-core/webpack/runtime/make namespace object","webpack://plover-core/./static/scripts/block-extensions/highlight/index.jsx"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { InspectorControls } from '@wordpress/block-editor';\nimport {\n  __experimentalToggleGroupControl as ToggleGroupControl,\n  __experimentalToggleGroupControlOption as ToggleGroupControlOption,\n  PanelBody,\n  SelectControl\n} from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { applyFilters } from '@wordpress/hooks';\n\n/**\n * Plover dependencies\n */\nimport { getExtensionSetting, is_premium, upsell_url } from '@plover/utils';\nimport { Tips } from '@plover/components';\n\nconst HighlightControls = ({ attributes, setAttributes }) => {\n\n  const highlightControls = (\n    <>\n      <ToggleGroupControl\n        isBlock\n        label={__('Style', 'plover')}\n        value={attributes.highlight}\n        onChange={(highlight) => {\n          setAttributes({ highlight });\n        }}\n      >\n        <ToggleGroupControlOption value=\"highlight\" label={__('Highlight', 'plover')}/>\n        <ToggleGroupControlOption value=\"none\" label={__('None', 'plover')}/>\n      </ToggleGroupControl>\n      {attributes.highlight === 'highlight' && (\n        <>\n          <SelectControl\n            label={__('Theme', 'plover')}\n            value={attributes.theme}\n            options={getExtensionSetting('highlight', 'support_themes', [])}\n            onChange={(theme) => setAttributes({ theme })}\n            __nextHasNoMarginBottom\n          />\n          <SelectControl\n            label={__('Language', 'plover')}\n            value={attributes.language}\n            options={getExtensionSetting('highlight', 'support_languages', [])}\n            onChange={(language) => setAttributes({ language })}\n            __nextHasNoMarginBottom\n          />\n        </>\n      )}\n    </>\n  );\n\n  return (\n    <InspectorControls>\n      <PanelBody>\n        {applyFilters(\n          'plover.highlight.InspectorControls',\n          highlightControls,\n          attributes,\n          setAttributes\n        )}\n\n        {!is_premium() && (\n          <Tips>\n            <p\n              dangerouslySetInnerHTML={{\n                __html: sprintf(\n                  /* translators: %s is the premium text and link. */\n                  __('Upgrade to %s to access these features:', 'plover'),\n                  '<a href=\"' + upsell_url() + '\">' + __('Premium', 'plover') + '</a>'\n                )\n              }}\n            />\n            <ul>\n              <li>{__('Line numbers', 'plover')}</li>\n              <li>{__('Show languages', 'plover')}</li>\n              <li>{__('Show copy button', 'plover')}</li>\n              <li>{__('More highlight themes', 'plover')}</li>\n            </ul>\n            <a href=\"https://wpplover.com/docs/plover-kit/modules/code-highlight/\" target=\"_blank\">\n              {__('Learn More â†—', 'plover')}\n            </a>\n          </Tips>\n        )}\n      </PanelBody>\n    </InspectorControls>\n  );\n};\n\nexport default HighlightControls;\n","import {useBlockProps} from \"@wordpress/block-editor\";\n\nexport default function HighlightEdit({BlockEdit, ...props}) {\n\n    const {attributes} = props;\n    const blockWrapProps = useBlockProps();\n    const alignClassnames = blockWrapProps.className.split(' ').filter(c => c.startsWith('align')).join(' ');\n\n    return (\n        <div className={`prism-${attributes.theme}-theme ${alignClassnames}`}>\n            <BlockEdit {...props}/>\n        </div>\n    );\n}","/**\n * WordPress dependencies\n */\nimport {useBlockProps} from \"@wordpress/block-editor\";\nimport {RawHTML, useEffect, useRef} from \"@wordpress/element\";\nimport {getTextContent} from \"@wordpress/rich-text\";\nimport {isString} from \"@plover/utils\";\nimport {applyFilters} from \"@wordpress/hooks\";\n\nconst HighlightPreview = ({attributes, ...props}) => {\n\n    const wrap = useRef(null);\n\n    const blockWrapProps = applyFilters('plover.highlight.previewWrapProps', useBlockProps({\n        className: applyFilters('plover.highlight.previewClassnames', {\n            [`plover-prism prism-${attributes.theme}-theme`]: true,\n            [`language-${attributes.language}`]: true\n        }, attributes)\n    }), attributes);\n\n    useEffect(() => {\n        if (wrap && wrap.current && window.Prism) {\n            window.Prism.highlightElement(wrap.current, false);\n        }\n    }, [wrap, attributes?.content, attributes.theme]);\n\n    return applyFilters('plover.highlight.previewBlockEdit', (\n        <pre {...blockWrapProps}>\n            <code ref={wrap}>\n                {\n                    isString(attributes?.content) // backwards compatible\n                        ? <RawHTML>{attributes?.content}</RawHTML>\n                        : getTextContent(attributes?.content)\n                }\n            </code>\n        </pre>\n    ), {attributes, blockWrapProps, ...props})\n}\n\nexport default HighlightPreview;\n","module.exports = window[\"React\"];","module.exports = window[\"plover\"][\"components\"];","module.exports = window[\"plover\"][\"utils\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"richText\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\n\n/**\n * Plover dependencies\n */\nimport { getExtensionSetting } from '@plover/utils';\n\n/**\n * Internal dependencies\n */\nimport HighlightPreview from './HighlightPreview';\nimport HighlightEdit from './HighlightEdit';\nimport HighlightControls from './HighlightControls';\n\nconst defaultAttributes = {\n  highlight: {\n    type: 'string',\n    default: 'highlight'\n  },\n  theme: {\n    type: 'string',\n    default: 'github-copilot',\n  },\n  language: {\n    type: 'string',\n    default: 'clike',\n  }\n};\n\naddFilter(\n  'blocks.registerBlockType',\n  'plover/highlight-attributes',\n  (settings, name) => {\n    if ('core/code' === name) {\n      settings.attributes = {\n        ...settings.attributes,\n        ...getExtensionSetting('highlight', 'attributes', defaultAttributes)\n      };\n    }\n\n    return settings;\n  }\n);\n\naddFilter(\n  'editor.BlockEdit',\n  'plover/highlight-controls',\n  (BlockEdit) => {\n    return (props) => {\n      const { attributes, isSelected, name } = props;\n\n      if (name !== 'core/code') {\n        return <BlockEdit {...props} />;\n      }\n\n      return (\n        <>\n          {attributes.highlight === 'none' ? <BlockEdit {...props}/> : (\n            isSelected ? (\n              <HighlightEdit BlockEdit={BlockEdit} {...props}/>\n            ) : <HighlightPreview {...props} />\n          )}\n\n          <HighlightControls {...props}/>\n        </>\n      );\n    };\n  }\n);\n"],"names":["InspectorControls","__experimentalToggleGroupControl","ToggleGroupControl","__experimentalToggleGroupControlOption","ToggleGroupControlOption","PanelBody","SelectControl","__","sprintf","applyFilters","getExtensionSetting","is_premium","upsell_url","Tips","HighlightControls","attributes","setAttributes","highlightControls","createElement","Fragment","isBlock","label","value","highlight","onChange","theme","options","__nextHasNoMarginBottom","language","dangerouslySetInnerHTML","__html","href","target","useBlockProps","HighlightEdit","BlockEdit","props","blockWrapProps","alignClassnames","className","split","filter","c","startsWith","join","RawHTML","useEffect","useRef","getTextContent","isString","HighlightPreview","wrap","current","window","Prism","highlightElement","content","ref","addFilter","defaultAttributes","type","default","settings","name","isSelected"],"sourceRoot":""}