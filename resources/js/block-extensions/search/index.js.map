{"version":3,"file":"block-extensions/search/index.js","mappings":"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","sources":["webpack://plover-core/./static/scripts/block-extensions/search/SearchControls.jsx","webpack://plover-core/external window \"React\"","webpack://plover-core/external window [\"plover\",\"data\"]","webpack://plover-core/external window [\"wp\",\"blockEditor\"]","webpack://plover-core/external window [\"wp\",\"components\"]","webpack://plover-core/external window [\"wp\",\"data\"]","webpack://plover-core/external window [\"wp\",\"element\"]","webpack://plover-core/external window [\"wp\",\"hooks\"]","webpack://plover-core/external window [\"wp\",\"i18n\"]","webpack://plover-core/webpack/bootstrap","webpack://plover-core/webpack/runtime/compat get default export","webpack://plover-core/webpack/runtime/define property getters","webpack://plover-core/webpack/runtime/hasOwnProperty shorthand","webpack://plover-core/webpack/runtime/make namespace object","webpack://plover-core/./static/scripts/block-extensions/search/index.jsx"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { InspectorControls } from '@wordpress/block-editor';\nimport {\n  __experimentalToolsPanelItem as ToolsPanelItem,\n  __experimentalToolsPanel as ToolsPanel,\n  SelectControl,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useMemo, useState } from '@wordpress/element';\nimport { applyFilters } from '@wordpress/hooks';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Plover dependencies\n */\nimport { coreStore } from '@plover/data';\n\nfunction PostTypeFilter ({ postType, onChange }) {\n\n  const { postTypes } = useSelect((select) => {\n    const { getPostTypes } = select(coreStore);\n    const excludedPostTypes = ['attachment'];\n    const filteredPostTypes = getPostTypes({ per_page: -1 })?.filter(\n      ({ viewable, slug }) => {\n        return viewable && !excludedPostTypes.includes(slug);\n      }\n    );\n\n    return {\n      postTypes: filteredPostTypes,\n    };\n  }, []);\n\n  // Convert post types to select control options\n  const postTypesSelectOptions = useMemo(() => {\n    return [\n      { label: __('All', 'plover'), value: '' },\n      ...(postTypes || []).map(({ labels, slug }) => {\n        return { label: labels.name, value: slug };\n      })\n    ];\n  }, [postTypes]);\n\n  return (\n    <SelectControl\n      label={__('Post Type', 'plover')}\n      value={postType}\n      options={postTypesSelectOptions}\n      onChange={onChange}\n    />\n  );\n}\n\nexport default function SearchControls (props) {\n  const { attributes, setAttributes } = props;\n  const { postType } = attributes;\n\n  const filters = applyFilters('plover.searchFilters', [\n    {\n      attr: 'postType',\n      label: __('Post Type', 'plover'),\n      isShownByDefault: true,\n      control: (\n        <PostTypeFilter postType={postType} onChange={(value) => {\n          setAttributes({ postType: value });\n        }}/>\n      )\n    }\n  ], props);\n\n  const [panelItems, setPanelItems] = useState({});\n  const resetAll = () => {\n    setPanelItems({});\n  };\n  const deselect = (attr) => {\n    setPanelItems({\n      ...panelItems,\n      attr: undefined,\n    });\n  };\n\n  return (\n    <InspectorControls>\n      <ToolsPanel label={__('Filters', 'plover')} resetAll={resetAll}>\n        {filters.map(({ attr, label, control, isShownByDefault }) => {\n          return (\n            <ToolsPanelItem\n              key={attr}\n              hasValue={() => !!panelItems[attr]}\n              label={label}\n              onDeselect={() => deselect(attr)}\n              isShownByDefault={isShownByDefault || attributes[attr]}\n            >\n              {control}\n            </ToolsPanelItem>\n          );\n        })}\n      </ToolsPanel>\n    </InspectorControls>\n  );\n}","module.exports = window[\"React\"];","module.exports = window[\"plover\"][\"data\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { addFilter } from '@wordpress/hooks';\n\nimport SearchControls from './SearchControls';\n\naddFilter(\n  'blocks.registerBlockType',\n  'plover/search-attributes',\n  (settings, name) => {\n    if ('core/search' === name) {\n      settings.attributes = {\n        ...settings.attributes,\n        postType: {\n          type: 'string'\n        }\n      };\n    }\n\n    return settings;\n  }\n);\n\naddFilter(\n  'editor.BlockEdit',\n  'plover/search-controls',\n  (BlockEdit) => {\n    return (props) => {\n      const { attributes, isSelected, name } = props;\n\n      if (name !== 'core/search') {\n        return <BlockEdit {...props} />;\n      }\n\n      return (\n        <>\n          <BlockEdit {...props}/>\n          <SearchControls {...props}/>\n        </>\n      );\n    };\n  }\n);\n"],"names":["InspectorControls","__experimentalToolsPanelItem","ToolsPanelItem","__experimentalToolsPanel","ToolsPanel","SelectControl","__","useMemo","useState","applyFilters","useSelect","coreStore","PostTypeFilter","postType","onChange","postTypes","select","getPostTypes","excludedPostTypes","filteredPostTypes","per_page","filter","viewable","slug","includes","postTypesSelectOptions","label","value","map","labels","name","createElement","options","SearchControls","props","attributes","setAttributes","filters","attr","isShownByDefault","control","panelItems","setPanelItems","resetAll","deselect","undefined","key","hasValue","onDeselect","addFilter","settings","type","BlockEdit","isSelected","Fragment"],"sourceRoot":""}