{"version":3,"file":"block-extensions/icon/index.js","mappings":"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,IAAI;;;;;;UCAnY;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://plover-core/./static/scripts/block-extensions/icon/IconControls.jsx","webpack://plover-core/./static/scripts/block-extensions/icon/IconVariationEdit.jsx","webpack://plover-core/./static/scripts/block-extensions/icon/index.jsx","webpack://plover-core/./static/scripts/block-extensions/icon/store.js","webpack://plover-core/./static/scripts/block-extensions/icon/utils.js","webpack://plover-core/./static/scripts/block-extensions/icon/style.scss?f138","webpack://plover-core/external window \"React\"","webpack://plover-core/external window [\"plover\",\"api\"]","webpack://plover-core/external window [\"plover\",\"components\"]","webpack://plover-core/external window [\"plover\",\"icons\"]","webpack://plover-core/external window [\"plover\",\"utils\"]","webpack://plover-core/external window [\"wp\",\"blockEditor\"]","webpack://plover-core/external window [\"wp\",\"blocks\"]","webpack://plover-core/external window [\"wp\",\"components\"]","webpack://plover-core/external window [\"wp\",\"compose\"]","webpack://plover-core/external window [\"wp\",\"data\"]","webpack://plover-core/external window [\"wp\",\"domReady\"]","webpack://plover-core/external window [\"wp\",\"element\"]","webpack://plover-core/external window [\"wp\",\"hooks\"]","webpack://plover-core/external window [\"wp\",\"i18n\"]","webpack://plover-core/./node_modules/clsx/dist/clsx.mjs","webpack://plover-core/webpack/bootstrap","webpack://plover-core/webpack/runtime/chunk loaded","webpack://plover-core/webpack/runtime/compat get default export","webpack://plover-core/webpack/runtime/define property getters","webpack://plover-core/webpack/runtime/hasOwnProperty shorthand","webpack://plover-core/webpack/runtime/make namespace object","webpack://plover-core/webpack/runtime/jsonp chunk loading","webpack://plover-core/webpack/before-startup","webpack://plover-core/webpack/startup","webpack://plover-core/webpack/after-startup"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { InspectorControls } from '@wordpress/block-editor';\nimport {\n  PanelBody,\n  SelectControl,\n  TextControl,\n  BaseControl,\n  Button,\n  Spinner,\n  __experimentalToggleGroupControl as ToggleGroupControl,\n  __experimentalToggleGroupControlOption as ToggleGroupControlOption,\n  __experimentalDropdownContentWrapper as DropdownContentWrapper,\n  __experimentalVStack as VStack\n} from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { useEffect, useState } from '@wordpress/element';\nimport { resolveSelect } from '@wordpress/data';\n\n/**\n * Plover dependencies\n */\nimport { Popover, UnitSlider, FixedSizeGrid as Grid, AutoSizer, Tips } from '@plover/components';\nimport { getExtensionSetting, titleCase } from '@plover/utils';\n\n/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * Internal dependencies\n */\nimport { isSlugEqual } from './utils';\n\nconst ICONS_PRE_ROW = 5;\n\nfunction IconPicker ({ current, icons, onChange }) {\n\n  const [keyword, setKeyword] = useState('');\n\n  const filteredIcons = icons.filter(({ tags, slug, name }) => {\n    if (keyword.trim() === '') {\n      return true;\n    }\n\n    const keys = (tags ?? []).join('') + slug + name;\n    return keys.toLowerCase().includes(keyword.trim().toLowerCase());\n  });\n\n  return (\n    <DropdownContentWrapper\n      paddingSize=\"none\"\n      className=\"plover-icon-settings-panel__popover-content\"\n    >\n      <VStack spacing=\"12px\">\n        <TextControl\n          label={__('Filter', 'plover')}\n          value={keyword}\n          onChange={setKeyword}\n        />\n\n        <div className=\"plover-icon-settings-panel__icon-list\" style={{ width: '300px', height: '240px' }}>\n          <AutoSizer>\n            {({ width, height }) => {\n              // Pay attention to the width of sidebar\n              const ICONS_PREVIEW_SIZE = Math.floor((width - 16) / ICONS_PRE_ROW);\n              const COLUMN_WIDTH = ICONS_PREVIEW_SIZE;\n              const ROW_HEIGHT = ICONS_PREVIEW_SIZE;\n\n              return <Grid\n                itemData={filteredIcons}\n                columnCount={ICONS_PRE_ROW}\n                columnWidth={COLUMN_WIDTH}\n                rowCount={Math.ceil(filteredIcons.length / ICONS_PRE_ROW)}\n                rowHeight={ROW_HEIGHT}\n                height={height}\n                width={width}\n              >\n                {({ columnIndex, rowIndex, style }) => {\n                  const i = ICONS_PRE_ROW * rowIndex + columnIndex;\n                  const icon = filteredIcons[i];\n                  if (!icon) {\n                    return null;\n                  }\n\n                  return (\n                    <div style={style} className=\"plover-icon-settings-panel__icon-preview-wrap\">\n                      <button\n                        aria-label={icon.name}\n                        className={clsx({\n                          'plover-icon-settings-panel__icon-preview': true,\n                          'active': isSlugEqual(current, icon.slug),\n                        })}\n                        dangerouslySetInnerHTML={{ __html: icon.svg }}\n                        onClick={() => {\n                          onChange({\n                            icon: String(icon.slug),\n                            svg: icon.svg\n                          });\n                        }}\n                      />\n                    </div>\n                  );\n                }}\n              </Grid>;\n            }}\n          </AutoSizer>\n        </div>\n\n        {filteredIcons.length <= 0 && (\n          <p className=\"plover-icon-settings-panel__no-result\">\n            {__('No icons', 'plover')}\n          </p>\n        )}\n      </VStack>\n    </DropdownContentWrapper>\n  );\n}\n\nfunction IconSelector ({ attributes, setAttributes }) {\n  const { iconSlug, iconSvgString, iconLibrary } = attributes;\n\n  const [loading, setLoading] = useState(false);\n  const [icons, setIcons] = useState([]);\n\n  const libraries = getExtensionSetting('icon', 'libraries', {});\n\n  const currentLibrary = libraries.find(({ slug }) => isSlugEqual(slug, iconLibrary)) ?? {};\n  const currentIcon = icons.find(({ slug }) => isSlugEqual(slug, iconSlug));\n\n  useEffect(() => {\n    if (!currentLibrary?.slug || currentLibrary?.slug === 'none') {\n      setIcons([]);\n      return;\n    }\n\n    setLoading(true);\n\n    resolveSelect('plover/icons').getIcons(currentLibrary?.slug)\n      .then(({ library, icons }) => {\n        if (isSlugEqual(library, iconLibrary)) {\n          setIcons(icons ?? []);\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n\n  }, [iconLibrary]);\n\n  return (\n    <>\n      <SelectControl\n        label={__('Icon library', 'plover')}\n        value={currentLibrary?.slug ?? 'none'}\n        options={[\n          { label: 'None', value: 'none' },\n          ...libraries.map(({ name, slug }) => {\n            return { label: name, value: slug };\n          })\n        ]}\n        onChange={(value) => {\n          setAttributes({\n            iconLibrary: value === 'none' ? null : value,\n            iconSlug: null,\n            iconSvgString: null,\n          });\n        }}\n      />\n      <BaseControl label={__('Select icon', 'plover')}>\n        {loading ? (<div><Spinner/></div>) : (\n          <Popover\n            className=\"plover-icon-settings-panel__icon-picker\"\n            toggle={{\n              icon: currentLibrary?.slug ? iconSvgString : '',\n              label:\n                currentLibrary?.name ?\n                  currentLibrary?.name + ' / ' + (currentIcon ? titleCase(currentIcon?.name) : __('None', 'plover'))\n                  : __('None', 'plover')\n            }}\n            renderContent={() => (\n              <IconPicker\n                current={iconSlug}\n                icons={icons}\n                onChange={({ icon, svg }) => {\n                  setAttributes({\n                    iconSlug: icon,\n                    iconSvgString: svg\n                  });\n                }}\n              />\n            )}\n          />\n        )}\n      </BaseControl>\n    </>\n  );\n}\n\nexport default function IconControls ({ attributes, setAttributes, position = true, clear = true }) {\n  return (\n    <InspectorControls>\n      <PanelBody\n        title={__('Icon', 'plover')}\n        className=\"block-editor-plover-inspector__icons\"\n      >\n        <IconSelector\n          attributes={attributes}\n          setAttributes={setAttributes}\n        />\n\n        <Tips>\n          <p>\n            <span dangerouslySetInnerHTML={{\n              __html: sprintf(\n                __('Use the %s plugin to get more icons from the Icon Library.', 'plover'),\n                '<a href=\"https://wpplover.com/plugins/plover-kit/\" target=\"_blank\">' + __('Plover Kit', 'plover') + '</a>'\n              )\n            }}/>\n            <a href=\"https://wpplover.com/docs/plover-kit/modules/icon-library/\" target=\"_blank\">\n              {__('Documentation ↗', 'plover')}\n            </a>\n          </p>\n        </Tips>\n\n        {position && (\n          <ToggleGroupControl\n            isBlock\n            label={__('Icon position', 'plover')}\n            value={attributes.iconPosition}\n            onChange={(position) => {\n              setAttributes({\n                iconPosition: position,\n              });\n            }}\n          >\n            <ToggleGroupControlOption value=\"left\" label={__('Left', 'plover')}/>\n            <ToggleGroupControlOption value=\"right\" label={__('Right', 'plover')}/>\n          </ToggleGroupControl>\n        )}\n\n        <UnitSlider\n          label={__('Icon Size', 'plover')}\n          value={attributes.iconSize}\n          min={10}\n          onChange={(value) => {\n            setAttributes({\n              iconSize: value,\n            });\n          }}\n        />\n\n        {clear && (\n          <Button variant=\"tertiary\" onClick={() => {\n            setAttributes({\n              iconLibrary: null,\n              iconSlug: null,\n              iconSvgString: null,\n            });\n          }}>\n            {__('Clear icon', 'plover')}\n          </Button>\n        )}\n      </PanelBody>\n    </InspectorControls>\n  );\n}\n","/**\n * WordPress dependencies\n */\nimport {\n  AlignmentControl,\n  BlockControls,\n  useBlockProps,\n  useBlockEditingMode,\n} from '@wordpress/block-editor';\nimport { ResizableBox } from '@wordpress/components';\n/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * Internal dependencies\n */\nimport IconControls from './IconControls';\n\nexport default function IconVariationEdit (props) {\n  const {\n    attributes,\n    setAttributes,\n    className,\n    isSelected,\n    isRTL,\n  } = props;\n\n  const {\n    align,\n    iconSize,\n    iconSvgString,\n  } = attributes;\n\n  const blockEditingMode = useBlockEditingMode();\n\n  const classes = clsx(className, {\n    [`has-text-align-${align}`]: align,\n  });\n  const blockProps = useBlockProps({ className: classes });\n\n  const controls = (\n    <>\n      {blockEditingMode === 'default' && (\n        <BlockControls group=\"block\">\n          <AlignmentControl\n            value={align}\n            onChange={(newAlign) =>\n              setAttributes({\n                align: newAlign,\n                dropCap: false\n              })\n            }\n          />\n        </BlockControls>\n      )}\n\n      <IconControls position={false} clear={false} {...props} setAttributes={(attrs) => {\n        setAttributes(attrs?.iconSvgString === undefined ? attrs : {\n          ...attrs,\n          content: '',\n        });\n      }}/>\n    </>\n  );\n\n  let showRightHandle = false;\n  let showLeftHandle = false;\n\n  if (align === 'center') {\n    // When the image is centered, show both handles.\n    showRightHandle = true;\n    showLeftHandle = true;\n  } else if (isRTL) {\n    // In RTL mode the image is on the right by default.\n    // Show the right handle and hide the left handle only when it is aligned left.\n    // Otherwise, always show the left handle.\n    showRightHandle = align === 'left';\n    showLeftHandle = align !== 'left';\n  } else {\n    // Show the left handle and hide the right handle only when the image is aligned right.\n    // Otherwise always show the right handle.\n    showLeftHandle = align === 'right';\n    showRightHandle = align !== 'right';\n  }\n\n  return (\n    <>\n      {controls}\n      <div {...blockProps}>\n        <ResizableBox\n          enable={{\n            bottom: true,\n            left: showLeftHandle,\n            right: showRightHandle,\n            top: false,\n          }}\n          lockAspectRatio\n          showHandle={isSelected}\n          style={{\n            display: 'inline-block'\n          }}\n          size={{\n            width: iconSize,\n            height: iconSize,\n          }}\n          onResizeStop={(_event, _direction, _elt, delta) => {\n            const newValue = parseInt(parseInt(iconSize) + delta.width, 10) + 'px';\n            setAttributes({\n              iconSize: newValue,\n            });\n          }}\n        >\n          <span\n            dangerouslySetInnerHTML={{\n              __html: iconSvgString\n            }}\n          />\n        </ResizableBox>\n      </div>\n    </>\n  );\n}","/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { register, createReduxStore, registerStore } from '@wordpress/data';\nimport { getBlockVariations, registerBlockVariation } from '@wordpress/blocks';\nimport domReady from '@wordpress/dom-ready';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * Plover dependencies\n */\nimport { getExtensionSetting } from '@plover/utils';\nimport { starOutline } from '@plover/icons';\n\n/**\n * Internal dependencies\n */\nimport IconControls from './IconControls';\nimport IconVariationEdit from './IconVariationEdit';\nimport iconsStore from './store';\nimport { isSlugEqual } from './utils';\n\nimport './style.scss';\n\nconst defaultIcon = {\n  'library': 'plover-core',\n  'slug': 'star',\n  'size': '24px',\n  'svg': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\" data-slot=\"icon\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.48 3.499a.562.562 0 0 1 1.04 0l2.125 5.111a.563.563 0 0 0 .475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 0 0-.182.557l1.285 5.385a.562.562 0 0 1-.84.61l-4.725-2.885a.562.562 0 0 0-.586 0L6.982 20.54a.562.562 0 0 1-.84-.61l1.285-5.386a.562.562 0 0 0-.182-.557l-4.204-3.602a.562.562 0 0 1 .321-.988l5.518-.442a.563.563 0 0 0 .475-.345L11.48 3.5Z\"></path></svg>'\n};\n\nconst defaultAttributes = {\n  iconLibrary: {\n    type: 'string',\n  },\n  iconSlug: {\n    type: 'string',\n  },\n  iconPosition: {\n    type: 'string',\n    default: 'right',\n  },\n  iconSize: {\n    type: 'string',\n    default: '18px'\n  },\n  iconSvgString: {\n    type: 'string'\n  }\n};\n\naddFilter(\n  'blocks.registerBlockType',\n  'plover/icon-attributes',\n  (settings, name) => {\n    const supported_blocks = getExtensionSetting('icon', 'blocks', []);\n    if (supported_blocks.includes(name)) {\n      settings.attributes = {\n        ...settings.attributes,\n        ...getExtensionSetting('icon', 'attributes', defaultAttributes)\n      };\n    }\n\n    return settings;\n  }\n);\n\naddFilter(\n  'editor.BlockEdit',\n  'plover/icon-controls',\n  (BlockEdit) => {\n    return (props) => {\n      const { name, attributes } = props;\n      const supported_blocks = getExtensionSetting('icon', 'blocks', []);\n\n      if (!supported_blocks.includes(name)) {\n        return <BlockEdit {...props}/>;\n      }\n\n      if (name === 'core/paragraph') {\n        // normal paragraph\n        if (!attributes?.className?.includes('is-style-icon')) {\n          return <BlockEdit {...props} />;\n        }\n\n        // plover icon variation\n        return <IconVariationEdit {...props}/>;\n      }\n\n      return (\n        <>\n          <BlockEdit {...props}/>\n          <IconControls {...props}/>\n        </>\n      );\n    };\n  },\n  5\n);\n\naddFilter(\n  'editor.BlockListBlock',\n  'plover/with-icon-styles',\n  createHigherOrderComponent((BlockListBlock) => {\n    return (props) => {\n      const supported_blocks = getExtensionSetting('icon', 'blocks', []);\n      const { attributes, name, clientId } = props;\n      const icon_libraries = getExtensionSetting('icon', 'libraries', {});\n\n      if (!supported_blocks.includes(name)) {\n        return <BlockListBlock {...props}/>;\n      }\n\n      const classes = clsx(props?.className, {\n        ['icon-library-not-available']: !icon_libraries.find(({ slug }) => isSlugEqual(slug, attributes?.iconLibrary)),\n        [`has-icon__${attributes?.iconSlug}`]: attributes?.iconSlug,\n        [`has-icon-position__${attributes?.iconPosition}`]: attributes?.iconPosition,\n      });\n\n      let css = '';\n\n      if (attributes?.iconSvgString) {\n        css += `--wp--custom--icon--url: url('data:image/svg+xml;utf8,${attributes.iconSvgString}');`;\n\n        if (attributes?.iconSize) {\n          css += `--wp--custom--icon--size: ${attributes.iconSize};`;\n        }\n      }\n\n      return (\n        <>\n          {css && <style>{'#block-' + clientId + '{' + css + '}'}</style>}\n          <BlockListBlock {...props} className={classes}/>\n        </>\n      );\n    };\n  }, 'withIcon')\n);\n\ndomReady(() => {\n  const supported_blocks = getExtensionSetting('icon', 'blocks', []);\n  if (!supported_blocks.includes('core/paragraph')) {\n    return;\n  }\n\n  const variations = getBlockVariations('core/paragraph');\n  if (!variations.some(variation => 'plover-icon' === variation.name)) {\n    registerBlockVariation('core/paragraph', {\n      name: 'plover-icon',\n      title: __('Plover: Icon', 'plover'),\n      icon: starOutline,\n      description: __('Insert a SVG icon.', 'plover'),\n      category: 'media',\n      keywords: ['icon', 'plover', 'svg'],\n      attributes: {\n        className: 'is-style-icon',\n        align: 'center',\n        iconLibrary: defaultIcon.library,\n        iconSlug: defaultIcon.slug,\n        iconSize: defaultIcon.size,\n        iconSvgString: defaultIcon.svg,\n        content: '',\n      },\n      scope: ['block', 'inserter', 'transform'],\n      isActive: (blockAttributes) => {\n        return blockAttributes && blockAttributes?.className?.includes('is-style-icon');\n      },\n    });\n  }\n});\n\nif (register) {\n  register(createReduxStore(iconsStore.name, iconsStore.options));\n} else {\n  // WP 5.4 - WP5.6\n  registerStore(iconsStore.name, iconsStore.options);\n}\n","import {fetchIcons} from \"@plover/api\";\n\n/*\nExample data structure\n\nconst state = {\n    libraries: {\n        lib_slug: {\n            icon_slug: {s:'svg raw string', t:['tags']}\n        }\n    }\n}\n */\nconst DEFAULT_STATE = {\n    libraries: {},\n};\n\nconst actions = {\n    fetchIconsFromAPI(library) {\n        return {\n            type: 'FETCH_ICONS_FROM_API',\n            library,\n        };\n    },\n    setIcons: (library, {icons}) => {\n        return {\n            type: 'SET_LIBRARY_ICONS',\n            library,\n            icons,\n        };\n    }\n};\n\nconst iconsStore = {\n    name: 'plover/icons',\n    options: {\n        reducer(state = DEFAULT_STATE, action) {\n            switch (action.type) {\n                case 'SET_LIBRARY_ICONS': {\n                    state = {\n                        ...state,\n                        libraries: {\n                            ...state.libraries,\n                            [action.library]: action.icons,\n                        }\n                    };\n                }\n            }\n\n            return state;\n        },\n        actions,\n        selectors: {\n            getIcons: (state, library) => {\n                const icons = state.libraries[library] ?? {}\n                return {library, icons};\n            }\n        },\n        controls: {\n            FETCH_ICONS_FROM_API({library}) {\n                return fetchIcons(library);\n            },\n        },\n        resolvers: {\n            * getIcons(library) {\n                const data = yield actions.fetchIconsFromAPI(library);\n                return actions.setIcons(library, data);\n            }\n        }\n    }\n};\n\nexport default iconsStore;\n","/**\n * Utils for checking slug\n *\n * @param l\n * @param r\n * @returns {boolean}\n */\nexport function isSlugEqual(l, r) {\n    if (typeof l === 'number' || typeof r === 'number') {\n        return Number(l) === Number(r);\n    }\n\n    return l === r;\n}\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"plover\"][\"api\"];","module.exports = window[\"plover\"][\"components\"];","module.exports = window[\"plover\"][\"icons\"];","module.exports = window[\"plover\"][\"utils\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"i18n\"];","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"block-extensions-icon\": 0,\n\t\"./style-block-extensions-icon\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkplover_core\"] = globalThis[\"webpackChunkplover_core\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-block-extensions-icon\"], () => (__webpack_require__(\"./static/scripts/block-extensions/icon/index.jsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["InspectorControls","PanelBody","SelectControl","TextControl","BaseControl","Button","Spinner","__experimentalToggleGroupControl","ToggleGroupControl","__experimentalToggleGroupControlOption","ToggleGroupControlOption","__experimentalDropdownContentWrapper","DropdownContentWrapper","__experimentalVStack","VStack","__","sprintf","useEffect","useState","resolveSelect","Popover","UnitSlider","FixedSizeGrid","Grid","AutoSizer","Tips","getExtensionSetting","titleCase","clsx","isSlugEqual","ICONS_PRE_ROW","IconPicker","current","icons","onChange","keyword","setKeyword","filteredIcons","filter","tags","slug","name","trim","keys","join","toLowerCase","includes","createElement","paddingSize","className","spacing","label","value","style","width","height","ICONS_PREVIEW_SIZE","Math","floor","COLUMN_WIDTH","ROW_HEIGHT","itemData","columnCount","columnWidth","rowCount","ceil","length","rowHeight","columnIndex","rowIndex","i","icon","dangerouslySetInnerHTML","__html","svg","onClick","String","IconSelector","attributes","setAttributes","_libraries$find","_currentLibrary$slug","iconSlug","iconSvgString","iconLibrary","loading","setLoading","setIcons","libraries","currentLibrary","find","currentIcon","getIcons","then","library","finally","Fragment","options","map","toggle","renderContent","IconControls","position","clear","title","href","target","isBlock","iconPosition","iconSize","min","variant","AlignmentControl","BlockControls","useBlockProps","useBlockEditingMode","ResizableBox","IconVariationEdit","props","isSelected","isRTL","align","blockEditingMode","classes","blockProps","controls","group","newAlign","dropCap","attrs","undefined","content","showRightHandle","showLeftHandle","enable","bottom","left","right","top","lockAspectRatio","showHandle","display","size","onResizeStop","_event","_direction","_elt","delta","newValue","parseInt","addFilter","createHigherOrderComponent","register","createReduxStore","registerStore","getBlockVariations","registerBlockVariation","domReady","starOutline","iconsStore","defaultIcon","defaultAttributes","type","default","settings","supported_blocks","BlockEdit","BlockListBlock","clientId","icon_libraries","css","variations","some","variation","description","category","keywords","scope","isActive","blockAttributes","fetchIcons","DEFAULT_STATE","actions","fetchIconsFromAPI","reducer","state","action","selectors","_state$libraries$libr","FETCH_ICONS_FROM_API","resolvers","data","l","r","Number"],"sourceRoot":""}